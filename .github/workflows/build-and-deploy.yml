# This workflow trigger on push to any branch.
name: CI / CD
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
    branches:

jobs:
  test:
      name: Test Code
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [8.x, 10.x, 12.x]

      steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test
        run: |
          npm ci
          npm test
        env:
          CI: true

  build-code-and-push-docker:
    name: Build code and push docker image
    if: github.ref == 'refs/heads/dev-*' || github.ref == 'refs/heads/master' # Build and push docker if branch is either master or dev-*
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: build code
        run: npm build
      - name: Create Docker tag
        env:
          NAME: sykdom-i-familien
        run: |
          echo "docker.pkg.github.com"/"$GITHUB_REPOSITORY"/"$NAME" > .docker_image
          echo "$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" > .docker_tag
      - name: Build Docker image
        run: |
          docker build -t $(cat .docker_image):$(cat .docker_tag) .
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Push Docker image
        run: "docker push $(cat .docker_image):$(cat .docker_tag)"
      - name: pass image file to next job.
        uses: actions/upload-artifact@v1
        with:
          name: docker_image
          path: .docker_image
      - name: pass tag file to next job.
        uses: actions/upload-artifact@v1
        with:
          name: docker_tag
          path: .docker_tag

  deploy-dev-sbs:
    name: Deploy to dev-sbs
    if: github.ref == 'refs/heads/dev-*' || github.ref == 'refs/heads/master' # Deploy if branch is either master or dev-*
    needs: build-code-and-push-docker # Depends on build-code-and-push-docker job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        # Download the image and tag file to use for the deployment cli.
      - name: Download image file
        uses: actions/download-artifact@v1
        with:
          name: docker_image
      - name: Download tag file
        uses: actions/download-artifact@v1
        with:
          name: docker_tag
      - name: unpack
        run: |
          cp docker_image/.docker_image .
          cp docker_tag/.docker_tag .
      - name: debug
        run: ls -la
      - name: deploy to dev-sbs
        uses: navikt/deployment-cli/action@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          cluster: dev-sbs
          team: dusseldorf
          resources: nais/dev-sbs.yml

  deploy-prod-sbs:
    name: Deploy to prod-sbs
    if: github.ref == 'refs/heads/master'  # If the branch is master
    needs: build-code-and-push-docker # Depends on build-code-and-push-docker job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        # Download the image and tag file to use for the deployment cli.
      - name: Download image file
        uses: actions/download-artifact@v1
        with:
          name: docker_image
      - name: Download tag file
        uses: actions/download-artifact@v1
        with:
          name: docker_tag
      - name: unpack
        run: |
          cp docker_image/.docker_image .
          cp docker_tag/.docker_tag .
      - name: debug
        run: ls -la
      - name: deploy to prod-sbs
        uses: navikt/deployment-cli/action@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          cluster: prod-sbs
          team: dusseldorf
          resources: nais/prod-sbs.yml